{"version":3,"sources":["assets/GC_logo.svg","assets/ITN_logo.svg","assets/shid_emozhl_logo.svg","logo.svg","assets/facts-slide/slider-1.jpg","assets/facts-slide/slider-2.jpg","assets/facts-slide/slider-3.jpg","assets/facts-slide/slider-4.jpg","assets/facts-slide/slider-5.jpg","assets/sectors/industry.jpg","assets/sectors/transport.jpg","assets/sectors/city-planing.jpg","assets/sectors/energy.jpg","assets/sectors/energetics.jpg","assets/sectors/utilisation.jpg","components/HeroBlock/HeroBlock.js","components/facts/SlideFacts.js","components/facts/Facts.js","components/AirQuality/AirQuality.js","components/SectorsList/SectorItem.js","components/SectorsList/SectorsList.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","title","links","logosImages","logos","map","logoItem","i","src","alt","className","key","navItems","link","href","SlideFacts","item","imgUrl","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSlides","slides","slideInfo","id","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","index","spaceBetween","slidesPerView","slidesPerGroup","mapboxgl","accessToken","AirQuality","mapContainer","useRef","useState","lng","lat","zoom","locationInfo","useEffect","Map","container","current","style","center","ref","SectorItem","sector","number","isToolTipShowing","setToolTipShowing","isDirectionSwitched","setDirectionSwitched","toggleToolTip","newValue","onMouseEnter","onMouseLeave","background","backgroundSize","name","description","SectorsList","subtitle","itemsList","items","Footer","partners","author","designer","partnersLogos","logo","navLinks","App","shidLogo","ITNLogo","gsLogo","factSlides","require","sectors","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6adbdffb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GC_logo.e60be19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/ITN_logo.899cd278.svg\";","module.exports = __webpack_public_path__ + \"static/media/shid_emozhl_logo.8dd4ef71.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/slider-1.3e6d941c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider-2.2d01e323.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider-3.2e8165b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider-4.4bfc6137.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider-5.b2936b7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/industry.5ec44869.jpg\";","module.exports = __webpack_public_path__ + \"static/media/transport.65643b05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/city-planing.f8f67844.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy.fb084e1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energetics.43f9dac6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/utilisation.a8b6caee.jpg\";","import React from 'react';\r\nimport './HeroBlock.scss';\r\n// import '../../App.scss';\r\n\r\nconst HeroBlock = ({title, links, logos}) => {\r\n    const logosImages = logos.map((logoItem, i) => <img src={logoItem} alt=\"partner-logo\" className=\"hero-partners-item\" key={i}/>);\r\n    const navItems = links.map((link, i) => <a href={link.href} className=\"hero-navigation-item\" key={i}>{link.title}</a>);\r\n\r\n    return (\r\n        <section className=\"hero\">\r\n            <div className=\"container\">\r\n                <div className=\"hero-partners\">\r\n                    {logosImages}\r\n                </div>\r\n                <nav className=\"hero-navigation\">\r\n                    {navItems}\r\n                </nav>\r\n                <h1 className=\"hero-title\">{title}</h1>\r\n                <a href=\"#\" className=\"hero-link\">Отследить</a>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HeroBlock;","import React from 'react';\r\nimport './Facts.scss';\r\n\r\nconst SlideFacts = ({item}) => {\r\n    return (\r\n        <div className=\"facts-slide\">\r\n            <img src={item.imgUrl} alt=\"slide_image\"/>\r\n            <p className=\"facts-slide-desc\">\r\n                {item.desc}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlideFacts;","import React from 'react';\r\nimport SlideFacts from './SlideFacts';\r\nimport SwiperCore, {Navigation, Pagination} from 'swiper';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport './Facts.scss';\r\n\r\n    SwiperCore.use([Navigation, Pagination])\r\n\r\n    const Facts = ({title, slides}) => {\r\n    const factsSlides = slides.map((slideInfo) => <SwiperSlide key={slideInfo.id}>\r\n        <SlideFacts item={slideInfo} />\r\n    </SwiperSlide>);\r\n\r\n\r\n    return (\r\n        <section className=\"facts container\">\r\n            <h2 className=\"facts-title\">{title}</h2>\r\n            <div className=\"swiper-button-prev\"/>\r\n            <Swiper\r\n                navigation={{\r\n                    nextEl: '.swiper-button-next',\r\n                    prevEl: '.swiper-button-prev',\r\n                }}\r\n                pagination={{\r\n                    el: '.facts-pagination',\r\n                    clickable: 'true',\r\n                    renderBullet: function(index, className) {\r\n                        return `<span class = \"facts-pagination-bullet ${className}\"></span>`;\r\n                     },\r\n                }}\r\n                spaceBetween={40}\r\n                slidesPerView={3}\r\n                // centeredSlides={true}\r\n                slidesPerGroup={3}\r\n                // loop={true}\r\n                // loopFillGroupWithBlank={true}\r\n            >\r\n                {factsSlides}\r\n            </Swiper>\r\n            <div className=\"swiper-button-next\"/>\r\n            <div className=\"facts-pagination\"/>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Facts;","import React, {useState, useEffect, useRef} from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './AirQuality.scss';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoieWFtbnlrIiwiYSI6ImNrZmxhZjZscjAwb2gycm54aWo2bGJvZnEifQ.BbYutmem-GZtYciYeMln1A';\r\n\r\nconst AirQuality = () => {\r\n    const mapContainer = useRef(null);\r\n    const [locationInfo] = useState({\r\n        lng: 31,\r\n        lat: 48.3,\r\n        zoom: 5\r\n    });\r\n\r\n    useEffect(() => {\r\n        const map = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            center: [locationInfo.lng, locationInfo.lat],\r\n            zoom: locationInfo.zoom\r\n        });\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <section className={'air-q container'}>\r\n            <h2 className=\"air-q-title\">Индекс качества воздуха в режиме реального времени</h2>\r\n            <div className=\"air-q-map\" ref={mapContainer}/>\r\n            <p className=\"air-q-text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AirQuality;","import React, {useState} from 'react';\r\n\r\nconst SectorItem = ({sector, number}) => {\r\n    const [isToolTipShowing, setToolTipShowing] = useState(false);\r\n    const [isDirectionSwitched, setDirectionSwitched] = useState(false);\r\n    const toggleToolTip = (newValue) => {\r\n            setDirectionSwitched( number % 3 === 0)\r\n\r\n        setToolTipShowing(newValue);\r\n    }\r\n    // const toggleToolTip = () => {\r\n    //     setToolTipShowing(\r\n    //         !isToolTipShowing\r\n    //     )\r\n    // }\r\n\r\n    return (\r\n        <div className=\"sectors-list-item\"\r\n             onMouseEnter={() => toggleToolTip(true)}\r\n             onMouseLeave={() => toggleToolTip(false)}\r\n             style={{\r\n                background: `url(${sector.imgUrl}) center no-repeat`,\r\n                backgroundSize: 'cover'\r\n             }}>\r\n                <p className=\"sectors-list-item-name\">\r\n                    {sector.name}\r\n                </p>\r\n            {\r\n                    isToolTipShowing && <p className={`sectors-list-item-tooltip ${\r\n                        isDirectionSwitched\r\n                            ? \"sectors-list-item-tooltip-switched\"\r\n                            : \"\"\r\n                    }`}>\r\n                        {sector.description}\r\n                    </p>\r\n                }\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default SectorItem;","import React from 'react';\r\nimport  './SectorsList.scss';\r\nimport SectorItem from \"./SectorItem\";\r\n\r\n    const SectorsList = ({title, subtitle, items}) => {\r\n    const itemsList = items.map((sector, i) => <SectorItem sector={sector}\r\n                                                           number={i+1} key={i} />\r\n\r\n    )\r\n\r\n    return (\r\n        <section className=\"sectors container\">\r\n            <h2 className=\"sectors-title\">{title}</h2>\r\n            <p className=\"sectors-subtitle\">{subtitle}</p>\r\n            <div className=\"sectors-list\">\r\n                    {itemsList}\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SectorsList;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = ({partners, links, author, designer}) => {\r\n    const partnersLogos = partners.map((logo, i) => <img key={i} src={logo} alt={'partner logo'}\r\n                                                         className=\"footer-partners-item\"/>);\r\n    const navLinks = links.map((link, i) => <a href={link.href} key={i} className={'footer-nav-link'}>{link.title}</a>);\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"footer-partners\">\r\n                    {partnersLogos}\r\n                </div>\r\n\r\n                <div className=\"footer-text-wrap\">\r\n                    <div className=\"footer-nav\">\r\n                        {navLinks}\r\n                    </div>\r\n                    <p className=\"footer-nav-text\">\r\n                        Сайт разрабол <span className=\"text-yellow\">{author}</span> в учебных целях, в рамках образовательной программы IT nation. Дизайн сайта создан <span className=\"text-yellow\">{designer}</span>.\r\n                    </p>\r\n                </div>\r\n                <p className=\"footer-text\">\r\n                    2020, Все права защищены\r\n                </p>\r\n                <p className=\"footer-text\">\r\n                    Согласие на обработку персональных данных<br/>\r\n                    Политика конфиденциальности\r\n                </p>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, {useState} from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.scss';\r\nimport HeroBlock from \"./components/HeroBlock/HeroBlock\";\r\nimport Facts from \"./components/facts/Facts\";\r\nimport AirQuality from \"./components/AirQuality/AirQuality\";\r\nimport SectorsList from './components/SectorsList/SectorsList';\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport gsLogo from './assets/GC_logo.svg';\r\nimport ITNLogo from './assets/ITN_logo.svg';\r\nimport shidLogo from './assets/shid_emozhl_logo.svg';\r\nimport './reset.scss';\r\n\r\nfunction App() {\r\n\r\n\r\n    const partners = [\r\n        shidLogo,\r\n        ITNLogo,\r\n        gsLogo   // , require('./assets/GC_logo.svg')\r\n    ];\r\n\r\n    const navLinks = [\r\n        {\r\n            title: \"Основные факты\",\r\n            href: \"#facts\"\r\n        },\r\n        {\r\n            title: \"Индекс качетсва воздуха\",\r\n            href: \"#quality\"\r\n        },\r\n        {\r\n            title: \"Потикика по уменьшению загрязнения\",\r\n            href: \"#politics\"\r\n        }\r\n    ];\r\n\r\n    const factSlides = [\r\n        {   id: '1332',\r\n            imgUrl: require(\"./assets/facts-slide/slider-1.jpg\"),\r\n            desc: \"Женщины и дети - главные жертвы загрязнения воздуха\"\r\n        },\r\n        {\r\n            id: '1333',\r\n            imgUrl: require(\"./assets/facts-slide/slider-2.jpg\"),\r\n            desc: \"Защитники окружающей среды подтвергаются преследованиям\"\r\n        },\r\n        {\r\n            id: '1334',\r\n            imgUrl: require(\"./assets/facts-slide/slider-3.jpg\"),\r\n            desc: \"Загрязнение воздуха – нарушение прав человека\"\r\n        },\r\n        {\r\n            id: '1335',\r\n            imgUrl: require(\"./assets/facts-slide/slider-4.jpg\"),\r\n            desc: \"4,2 миллиона случаев преждевременной смерти людей из-за загрязнения \\n\" +\r\n                \"атмосферного воздуха\"\r\n        },\r\n        {\r\n            id: '1336',\r\n            imgUrl: require(\"./assets/facts-slide/slider-5.jpg\"),\r\n            desc: \"Согласно оценкам, суммарный объем затрат \\n\" +\r\n                \"в связи с загрязнением воздуха превышает 5 трлн долл. в год.\"\r\n        },\r\n    ];\r\n\r\n    const sectors = [\r\n        {\r\n            name: \"Промышленность\",\r\n            imgUrl: require('./assets/sectors/industry.jpg'),\r\n            description: \"Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)\"\r\n        },\r\n        {\r\n            name: \"Транспорт\",\r\n            imgUrl: require('./assets/sectors/transport.jpg'),\r\n            description: \"Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы\"\r\n        },\r\n        {\r\n            name: \"Городское планирование\",\r\n            imgUrl: require('./assets/sectors/city-planing.jpg'),\r\n            description: \"Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов\"\r\n        },\r\n        {\r\n            name: \"Энергия\",\r\n            imgUrl: require('./assets/sectors/energy.jpg'),\r\n            description: \"Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения\"\r\n        },\r\n        {\r\n            name: \"Энергетика\",\r\n            imgUrl: require('./assets/sectors/energetics.jpg'),\r\n            description: \" Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)\"\r\n        },\r\n        {\r\n            name: \"Утилизация отходов\",\r\n            imgUrl: require('./assets/sectors/utilisation.jpg'),\r\n            description: \"стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов\"\r\n        }\r\n    ];\r\n\r\n    const author = \"Alpeyev Yuriy\";\r\n    const designer = \"Валерией Бубырь\";\r\n\r\n    return (\r\n    <>\r\n      <HeroBlock title=\"Качество атмосферного воздуха и здоровье\"\r\n                 logos={partners}\r\n                 links={navLinks}/>\r\n      <Facts title=\"Основные факты\" slides={factSlides}/>\r\n      <AirQuality/>\r\n      <SectorsList title=\"Политика по уменьшению загрязнений\"\r\n                              subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\"\r\n                 items={sectors} />\r\n      <Footer links={navLinks} partners={partners} author={author} designer={designer}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}